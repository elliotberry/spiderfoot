FROM python:3-slim

# Set environment variables
ENV GOPATH="/go" \
    PATH="/go/bin:/opt/venv/bin:$PATH" \
    SPIDERFOOT_DATA="/var/lib/spiderfoot" \
    SPIDERFOOT_LOGS="/var/lib/spiderfoot/log" \
    SPIDERFOOT_CACHE="/var/lib/spiderfoot/cache" \
    VIRTUAL_ENV="/opt/venv"

# Install dependencies in one layer
RUN apt-get update && apt-get install -y \
    nbtscan \
    onesixtyone \
    nmap \
    golang \
    ruby \
    ruby-dev \
    bundler \
    bsdmainutils \
    dnsutils \
    coreutils \
    git \
    curl \
    wget \
    unzip \
    chromium \
    && rm -rf /var/lib/apt/lists/*

# Install Yarn and NodeJS
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
    && echo 'deb https://dl.yarnpkg.com/debian/ stable main' | tee /etc/apt/sources.list.d/yarn.list \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get update && apt-get install -y yarn nodejs \
    && rm -rf /var/lib/apt/lists/*

# Prepare directories
RUN mkdir -p /tools "$GOPATH/src" "$GOPATH/bin" "$VIRTUAL_ENV" \
    $SPIDERFOOT_DATA $SPIDERFOOT_LOGS $SPIDERFOOT_CACHE \
    && python -m venv "$VIRTUAL_ENV"

# Install tools
WORKDIR /tools
RUN git clone https://github.com/urbanadventurer/WhatWeb && gem update && gem install psych rchardet mongo json && cd WhatWeb && bundle install \
    && git clone https://github.com/dochne/wappalyzer.git && cd wappalyzer && yarn install \
    && wget https://github.com/projectdiscovery/nuclei/releases/download/v2.6.5/nuclei_2.6.5_linux_amd64.zip && unzip nuclei_2.6.5_linux_amd64.zip \
    && git clone https://github.com/projectdiscovery/nuclei-templates.git \
    && git clone https://github.com/drwetter/testssl.sh.git \
    && git clone https://github.com/Tuhinshubhra/CMSeeK && cd CMSeeK && pip install -r requirements.txt && mkdir Results \
    && git clone https://github.com/EnableSecurity/wafw00f && cd wafw00f && python3 setup.py install

# Install Python tools globally
RUN pip install dnstwist snallygaster trufflehog retire

# Configure non-root user
RUN groupadd spiderfoot \
    && useradd -m -g spiderfoot -d /home/spiderfoot -s /sbin/nologin -c "SpiderFoot User" spiderfoot \
    && chown -R spiderfoot:spiderfoot /tools $VIRTUAL_ENV /home/spiderfoot $SPIDERFOOT_DATA $SPIDERFOOT_LOGS $SPIDERFOOT_CACHE

# Copy application and install dependencies
WORKDIR /home/spiderfoot
COPY . .
COPY requirements.txt .
RUN pip install -U pip && pip install -r requirements.txt

# Switch to user
USER spiderfoot

# Expose and run the application
EXPOSE 5001
CMD ["python", "./sf.py", "-l", "0.0.0.0:5001"]